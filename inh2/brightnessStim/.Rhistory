0.27*56
install.packages("R2jags")
?brms
??brms
factorial(4)
library("plotrix")
myBlankCircles=function(filename,color){
#jpeg(filename,width=320,height=480)
par(mar=c(0,0,0,0), bg='grey50')
plot(1, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), axes = FALSE)
draw.circle(0, 0, c(1), nv=1000, border = color, col = color)
#dev.off()
}
target.color<-paste("grey", round(seq(25,75,length.out=10)),sep="")
for(i in 0:9){
string=sprintf("%02d",i)
filename=paste("Blank_circle_",string,".jpeg",sep="")
colors=c("grey20", target.color[i+1])
myCircles(filename,colors)
}
for(i in 0:9){
string=sprintf("%02d",i)
filename=paste("Blank_circle_",string,".jpeg",sep="")
colors=c("grey20", target.color[i+1])
myBlankCircles(filename,colors)
}
target.color
myBlankCircles=function(filename,color){
#jpeg(filename,width=320,height=480)
par(mar=c(0,0,0,0), bg='grey50')
plot(1, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), axes = FALSE)
draw.circle(0, 0, c(1), nv=1000, border = color, col = color)
#dev.off()
}
for(i in 0:9){
string=sprintf("%02d",i)
filename=paste("Blank_circle_",string,".jpeg",sep="")
colors=target.color[i+1]
myBlankCircles(filename,colors)
}
for(i in 0:9){
string=sprintf("%02d",i)
filename=paste("Blank_circle_",string,".jpeg",sep="")
colors=target.color[i+1]
myBlankCircles(filename,colors)
}
setwd("~/Git_projects/ctx-contrast/taskDev/brightnessStim")
myBlankCircles=function(filename,color){
jpeg(filename,width=320,height=480)
par(mar=c(0,0,0,0), bg='grey50')
plot(1, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), axes = FALSE)
draw.circle(0, 0, c(1), nv=1000, border = color, col = color)
dev.off()
}
for(i in 0:9){
string=sprintf("%02d",i)
filename=paste("Blank_circle_",string,".jpeg",sep="")
colors=target.color[i+1]
myBlankCircles(filename,colors)
}
rm(list=ls())
library("plotrix")
?draw.circle
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = FALSE)
draw.circle(0, 0, 1, nv=1000, border = colors, col = colors)
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = FALSE)
draw.circle(0, 0, 1, nv=1000, border = "white", col = "white")
par(mar=c(0,0,0,0), bg='black')
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = FALSE)
draw.circle(0, 0, 1, nv=1000, border = "white", col = "black")
getY <- function(r,x) sqrt(r^2 - x^2)
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = TRUE)
par(mar=c(0,0,0,0), bg='black')
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = TRUE)
par(mar=c(0,0,0,0), bg='white')
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = TRUE)
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
par(mar=c(0,0,0,0), bg='white')
plot(1, xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = TRUE)
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
par(mar=c(0,0,0,0), bg='white')
plot(1, xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4))
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
axis(side=1)
axis(side=2)
par(mar=c(0,0,0,0), bg='white')
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = TRUE)
axis(side=1)
axis(side=2)
par(mar=c(1,1,1,1), bg='white')
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = TRUE)
par(mar=c(2,2,1,1), bg='white')
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = TRUE)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-4, 4), ylim=c(-4, 4), axes = TRUE)
axis(side=1)
axis(side=2)
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), axes = TRUE)
axis(side=1)
axis(side=2)
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
getY <- function(r,x) sqrt(r^2 - x^2)
getY(r, -1)
getY(r=1, -1)
# get the center
getY(r=1.5, -1)
# get the center
r <- 1.5
x <- -1
y <- getY(r=r, x)
draw.circle(x, y, r, nv=1000, border = 'black', col = 'white')
getY <- function(r,x) sqrt(r^2 - x^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), axes = TRUE)
axis(side=1)
axis(side=2)
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
# get the center
# get the center
r <- 1.5
x <- -1
y <- getY(r=r, x)
draw.circle(x, y, 0.5, nv=1000, border = 'black', col = 'white')
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
# get the center
r <- 1.5
x <- -1
y    <- getY(r=r, x)
rNew <- getR(x, y)
rNew
draw.circle(x, y, 0.5, nv=1000, border = 'black', col = 'white')
points(x, y)
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), axes = TRUE)
axis(side=1)
axis(side=2)
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
# get the center
r <- 1.5
x <- -1
y    <- getY(r=r, x)
rNew <- getR(x, y)
points(x, y)
y    <- getY(r=1, x)
points(x, y)
# get the center
r <- 1.5
x <- -1.5
y    <- getY(r=1, x)
points(x, y)
draw.circle(0, 0, 3, nv=1000, border = 'black', col = 'white')
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-2, 2), ylim=c(-2, 2), axes = TRUE)
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
draw.circle(0, 0, 3, nv=1000, border = 'black', col = 'white')
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
draw.circle(0, 0, 2, nv=1000, border = 'black', col = 'white')
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
draw.circle(0, 0, c(2, 1.5, 1), nv=1000, border = 'black', col = 'white')
# get the center
r <- 1.5
x <- -1.5
y    <- getY(r=r, x)
y
points(x, y)
draw.circle(x, y, 0.5, nv=1000, border = 'black', col = 'white')
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
draw.circle(0, 0, c(2, 1.2, 1), nv=1000, border = 'black', col = 'white')
# get the center
r <- 1.2
x <- -1.5
y    <- getY(r=r, x)
points(x, y)
draw.circle(x, y, 0.2, nv=1000, border = 'black', col = 'white')
# get the center
r <- 1.2
x <- -1.5
y    <- getY(r=r, x)
# get the center
r <- 1.2
x <- -1.5
y    <- getY(r=r, x)
r
x
x <- -1.2
y    <- getY(r=r, x)
points(x, y)
draw.circle(x, y, 0.2, nv=1000, border = 'black', col = 'white')
seq(-1.2, 1.2, length.out = 6)
# get the center
r <- 1.2
x <- seq(-1.2, 1.2, length.out = 6)
y <- getY(r=r, x)
y
draw.circle(x, y, 0.2, nv=1000, border = 'black', col = 'white')
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
draw.circle(0, 0, c(2, 1.2, 1), nv=1000, border = 'black', col = 'white')
# get the center
r <- 1.2
x <- seq(-1.2, 1.2, length.out = 6)
y <- getY(r=r, x)
points(x, y)
y <- getY(r=r, 0)
for(i in seq_along(y)){
draw.circle(x[i], y[i], 0.2, nv=1000, border = 'black', col = 'white')
}
# get the center
r <- 1.2
x <- seq(-1.2, 1.2, length.out = 6)
y <- getY(r=r, x)
x
y
for(i in seq_along(y)){
draw.circle(x[i], y[i], 0.2, nv=1000, border = 'black', col = 'white')
}
y <- getY(r, 0)
y
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
draw.circle(0, 0, c(2, 1.2, 1), nv=1000, border = 'black', col = 'white')
x <- -1.2
y <- getY(r, x)
draw.circle(x, y, 0.2, nv=1000, border = 'black', col = 'white')
x <- 1.2
y <- getY(r, x)
draw.circle(x, y, 0.2, nv=1000, border = 'black', col = 'white')
x <- 0
y <- getY(r, x)
draw.circle(x, y, 0.2, nv=1000, border = 'black', col = 'white')
r^2
x^2
r
y
point(x,y)
points(x,y)
points(0,r^2)
points(0,sqrt(r^2))
r
points(0,sqrt(r^2 - 1))
points(0,sqrt(r^2 - 1^2))
points(-1,sqrt(r^2 - 1^2))
points(-1.2,sqrt(r^2 - (-1.2)^2))
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
draw.circle(0, 0, 1, nv=1000, border = 'black', col = 'white')
# get the center
r <- 1
x <- seq(-1, 1, length.out = 6)
y <- getY(r=r, x)
y
points(x, y)
points(0, 1)
x <- seq(-1, 1, length.out = 1000)
y <- getY(r=r, x)
points(x, y)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
points(x, y)
points(x, -y, type = "l")
getY <- function(r,x) c(sqrt(r^2 - x^2), -sqrt(r^2 - x^2))
getY <- function(r,x) c(sqrt(r^2 - x^2), -sqrt(r^2 - x^2))
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# plot the center target
r <- 1
x <- seq(-1, 1, length.out = 1e4)
y <- getY(x)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
x
# plot the center target
r <- 1
x <- rep(seq(-1, 1, length.out = 1e4), 2)
y <- getY(x)
# plot the center target
r <- 1
x <- rep(seq(-1, 1, length.out = 1e4), 2)
y <- getY(r, x)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
getY <- function(r,x) c(sqrt(r^2 - x^2), -sqrt(r^2 - x^2))
# plot the center target
r <- 1
x <- rep(seq(-1, 1, length.out = 1e4), 2)
y <- getY(r, x)
length(x)
# plot the center target
r <- 1
x <- seq(-1, 1, length.out = 1e4)
y <- getY(r, x)
x <- rep(x, 2)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
x
# plot the center target
r <- 1
x <- seq(-1, 1, length.out = 1e4)
y <- getY(r, x)
plot(rep(x,2), c(y,-y), type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
length(x)
getY <- function(r,x) sqrt(r^2 - x^2)
par(mar=c(2,2,1,1), bg='white', las=1)
# plot the center target
r <- 1
x <- seq(-1, 1, length.out = 1e4)
y <- getY(r, x)
plot(rep(x,2), c(y,-y), type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# plot the center target
r <- 1
x <- seq(-1, 1, length.out = 1e4)
y <- getY(r, x)
plot(rep(x,2), c(y,-y), type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# plot the center target
r <- 1
x <- seq(-1, 1, length.out = 1e4)
y <- getY(r, x)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
getY <- function(r,x) sqrt(r^2 - x^2)
getR <- function(x, y) sqrt(x^2 + y^2)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# plot the center target
r <- 1
x <- seq(-1, 1, length.out = 1e4)
y <- getY(r, x)
plot(x ,  y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
plot(-x, -y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
plot(x ,  y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
points(-x, -y, type="l")
# find center coordinates of the targets around the center
r <- 1.5
x <- seq(-1.5, 1.5, length.out = 6)
y <- getY(r, x)
points(x, y)
getY <- function(r, theta) r*cos(theta)
getX <- function(r, theta) r*sin(theta)
theta <- seq(0, 180, length.out = 5)
theta
getY <- function(r, theta) r*cos(theta)
getX <- function(r, theta) r*sin(theta)
y <- getY(r, theta)
x <- getX(r, theta)
y
x
points(x, y)
r <- 1
x <- seq(-1, 1, length.out = 1e4)
y <- getY(r, x)
plot(c(x,-x), c(y, -y), type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
points(-x, -y, type="l")
# find center coordinates of the targets around the center
r <- 1.5
theta <- seq(0, 180, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
theta <- seq(0, 180, length.out = 1e4)
y <- getY(r, x)
plot(c(x,-x), c(y, -y), type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
points(-x, -y, type="l")
# plot the center target
r <- 1
theta <- seq(0, 180, length.out = 1e4)
y <- getY(r, theta)
x <- getX(r, theta)
plot(c(x,-x), c(y, -y), type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# plot the center target
r <- 1
theta <- seq(0, 180, length.out = 1e4)
y <- getY(r, theta)
x <- getX(r, theta)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
theta <- seq(0, 180, length.out = 1e3)
y <- getY(r, theta)
x <- getX(r, theta)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# find center coordinates of the targets around the center
r <- 1.5
theta <- seq(0, 180, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
r <- 1
theta <- seq(0, 180, length.out = 1e3)
y <- getY(r, theta)
x <- getX(r, theta)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# find center coordinates of the targets around the center
r <- 1.5
theta <- seq(0, 360, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
theta <- seq(0, 270, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
getY <- function(r, theta) r*cos(theta)
getX <- function(r, theta) r*sin(theta)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# plot the center target
r <- 1
theta <- seq(0, 180, length.out = 1e3)
y <- getY(r, theta)
x <- getX(r, theta)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# find center coordinates of the targets around the center
r <- 1.5
theta <- seq(0, 270, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
theta <- seq(0, 180, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
r <- 1
theta <- seq(0, 180, length.out = 1e3)
y <- getY(r, theta)
x <- getX(r, theta)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# find center coordinates of the targets around the center
r <- 1.5
theta <- seq(0, 180, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
theta
getY <- function(r, theta) r*cos(theta)
getX <- function(r, theta) r*sin(theta)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# plot the center target
r <- 1
theta <- seq(0, 180, length.out = 1e3)
y <- getY(r, theta)
x <- getX(r, theta)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# find center coordinates of the targets around the center
r <- 1.5
theta <- seq(0, 225, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
theta
theta <- seq(0, 180, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
getY <- function(r, theta) r*cos(theta)
getX <- function(r, theta) r*sin(theta)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# plot the center target
r <- 1
theta <- seq(0, 180, length.out = 1e3)
y <- getY(r, theta)
x <- getX(r, theta)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# find center coordinates of the targets around the center
r <- 1.5
theta <- seq(0, 180, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
getY <- function(r, theta) r*cos(theta)
getX <- function(r, theta) r*sin(theta)
par(mar=c(2,2,1,1), bg='white', las=1)
plot(1, type="n", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# plot the center target
r <- 1
theta <- seq(0, 180, length.out = 1e3)
y <- getY(r, theta)
x <- getX(r, theta)
plot(x, y, type="l", xlab="", ylab="", xlim=c(-3, 3), ylim=c(-3, 3), axes = TRUE)
# find center coordinates of the targets around the center
r <- 1.5
theta <- seq(0, 180, length.out = 5)
y <- getY(r, theta)
x <- getX(r, theta)
points(getX(r, -45), getY(r, -45))
# find center coordinates of the targets around the center
r <- 1.5
theta <- seq(-45, 180, length.out = 6)
y <- getY(r, theta)
x <- getX(r, theta)
points(x, y)
